in the server under security inbounds 1 for system access (CMD) port 22, if we conncet to pgadmin first we have to craete an inound with port 5432

SERVER PATHS:
/var/lib/pgsql/agent_backups
/usr

	timedatectl
	timedatectl list-timezones
	sudo timedatectl set-timezone Asia/Kolkata



COMMANDS:
pwd 				- present working directory
ls 					- to list all the folder, files in that directory
ls /path/to/directory_name	- to list all the folder, files in that directory
chown 				- to change owner
chmod				- to change mode (permission)
navigates to home 	- cd ~

to find how server was made 		-  cat /etc/os-release (using amazon linux / redhat)
													- hostnamectl

to view file contents			- cat .pgpass


to view and modify conf file 	- sudo vi /var/lib/pgsql/17/data/postgresql.conf
to view and modify hba file 		-  sudo vi /var/lib/pgsql/17/data/pg_hba.conf
	to insert new row 	- o												
	to exit from editing the file 	- esc
	to exit without saving 			- :q!
to close the file 	- :wq

		bin folder		- /usr/pgsql-17/bin/
		data folder	- /var/lib/pgsql/17/data/
		
		To access this directory, you need to use superuser (root) privileges or switch to the PostgreSQL user (usually postgres):
			switch to postgres user: 		sudo -i -u postgres
			to exit from postgres user 	exit

to remove all files and subdirectories inside it:	rm -rf /home/ec2-user/pg_backup/*
to delete hidden files (those starting with a dot):		 rm -rf /home/ec2-user/pg_backup/{*,.*}
to remove the entire directory and recreate it (best for a completely clean backup location): 	rm -rf /home/ec2-user/pg_backup
																																					mkdir /home/ec2-user/pg_backup

To delete all files and subdirectories (including hidden ones) from your current directory: 	rm -rf ./*
																																				rm -rf ./.*
to delete everything (including hidden files and folders): rm -rf .[!.]* *
to rename the directory		- mv /var/lib/pgsql/17/data /var/lib/pgsql/17/data_old		****


to copy files from one dir to other:
		SYNTAX: cp -r /source/folder /destination/
		Ex: cp -r /home/ec2-user/pg_backup/* /var/lib/pgsql/17/data/
	
		cp: copy files & directories
		-r:  It tells the cp command to copy directories recursively, 
			meaning it will copy not only files but also all subdirectories and their contents inside the specified directory
			Without -r, cp can only copy individual files, not directories.


	SQL
		to create a new sql user  		- 			(also server user)
		to add password						- psql -U postgres	***
		to swith the user 						- sudo -i -u postgres
		to use postgresql 					- psql -U postgres		- from ec2-user to postgresql
		to exit from postgresql				- \q		- it will swich to ec2-user
	
														- sudo -u postgres psql
														
		to know postgresql version		-  psql --version
		to know postgresql version		- sudo -u postgres psql -c "SELECT version();"
		to know postgresql status 		- sudo systemctl status postgresql-17
		
		to restart postgresql				- sudo systemctl restart postgresql-17
		to relaod postgresql				- sudo systemctl reload postgresql-17	***
		
		to start the postgresql				- sudo systemctl start postgresql-17
		to stop the postgresql				- sudo systemctl stop postgresql-17
		
														- sudo systemctl start pgagent
														- sudo systemctl status pgagent
														
		to know whch user pgagent using		- ps -ef | grep pgagent

---------------------------------------------------------------------------------------------------------------------------
To check the main config file and infer paths		- ps aux | grep postgres
Find Package Installation Path (if installed via package manager)		- rpm -ql postgresql17

