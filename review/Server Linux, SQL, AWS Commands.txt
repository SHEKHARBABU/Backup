in the server under security inbounds 1 for system access (CMD) port 22, if we conncet to pgadmin first we have to create an inound with port 5432

SERVER PATHS:
/var/lib/pgsql/agent_backups
/usr

	timedatectl
	timedatectl list-timezones
	sudo timedatectl set-timezone Asia/Kolkata


COMMANDS:

LINUX:
to know present working directory				- pwd
to list all the folder, files in that directory		- ls
to list all the folder, files in that directory		- ls /path/to/directory_name
to change owner											- chown
to change mode (permission)						- chmod
navigates to home 										- cd ~
to run the file												- ./file_name.extension	-
to swith user within instance level				- sudo -i -u postgres (another user in instance ***, as we installed postgresql a super user will be created in instance, sql level) ****

to find server details									-  cat /etc/os-release (using amazon linux / redhat)
																	- hostnamectl

to know the current logged-in user				- whoami
current user name										- id -un
to switch to root user									- sudo su -

to view file contents										- cat .pgpass
to open a file for editing 								- vi filename
	to Insert before the cursor						- i
	to Insert at the beginning of the line		- I
	to Append after the cursor						- a
	to Append at the end of the line				- A
	to open a new line below current line and enter insert mode 				- o	
	to open a new line above current line and enter insert mode				- O
	to exit from editing the file 						- esc
	to save changes and continue editing 	- :w
	to save changes and exit the file 			- :wq
	to exit without saving 								- :q!
	
to view and modify conf file 						- sudo vi /var/lib/pgsql/17/data/postgresql.conf
to view and modify hba file 							- sudo vi /var/lib/pgsql/17/data/pg_hba.conf

to search in the file (first type ESC)			- / search_string
																	-? search_string 	searches from backword
																	- n next occurance
																	- N previous occurance


to remove all files and subdirectories inside it		- rm -rf /home/ec2-user/pg_backup/*
to delete hidden files (those starting with a dot)		- rm -rf /home/ec2-user/pg_backup/{*,.*}
to remove the entire directory and recreate it (best for a completely clean backup location): 	rm -rf /home/ec2-user/pg_backup
																																					mkdir /home/ec2-user/pg_backup

To delete all files and subdirectories (including hidden ones) from your current directory 		- rm -rf ./*
																																				- rm -rf ./.*
to delete everything (including hidden files and folders): 	rm -rf .[!.]* *
to rename a file / directory		- mv existing_name new_name

to clear all the content in the file 	- > filename
													- truncate -s 0 filename

to copy files from one dir to other:
		SYNTAX: cp -r /source/folder /destination/
		Ex: cp -r /home/ec2-user/pg_backup/* /var/lib/pgsql/17/data/
	
		cp: copy files & directories
		-r:  It tells the cp command to copy directories recursively, 
			meaning it will copy not only files but also all subdirectories and their contents inside the specified directory
			Without -r, cp can only copy individual files, not directories.

	PATHS IN THE SERVER:
		bin folder		- /usr/pgsql-17/bin/
		data folder	- /var/lib/pgsql/17/data/
		
		To access this directory, you need to use superuser (root) privileges or switch to the PostgreSQL user (usually postgres):
			switch to postgres user: 		sudo -i -u postgres
			to exit from postgres user 	exit

to know the permissions of the directory 		- ls -l -d directory_path

to restart the cron											- sudo systemctl restart crond (when we edit the /etc/crontab)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL

to enable the postgresql 			- systemctl enable postgresql-17
to swith from server to SQL	- psql -U postgres
to exit from postgresql				- \q	[it will swich to ec2-user]
to create a new sql user  		- 			

to add password						- psql -U postgres	***
to switch users with in postgresql		- psql -U kjs_server -h localhost -d postgres
														
to know postgresql version		-  psql --version
to know postgresql version		- sudo -u postgres psql -c "SELECT version();"
to know postgresql status 		- sudo systemctl status postgresql-17

to restart postgresql				- sudo systemctl restart postgresql-17
to relaod postgresql				- sudo systemctl reload postgresql-17	***

to start the postgresql				- sudo systemctl start postgresql-17
to stop the postgresql				- sudo systemctl stop postgresql-17

												- sudo systemctl start pgagent
												- sudo systemctl status pgagent
												
to know whch user pgagent using		- ps -ef | grep pgagent


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
AWS CLOUD

to know the aws version			- aws --version
to list the avaliable buckets		- aws s3 ls	

to create new bucket				- aws s3 mb s3://ec2-cloud-bucket-1
to see files in a bucket			- aws s3 ls s3://your-bucket-name

To list files inside a folder in the bucket 		- 	aws s3 ls s3://your-bucket-name/folder-name/
																		aws s3 ls s3://ec2-cloud-bucket-1

to display file contents in the terminal			- 	aws s3 cp s3://ec2-cloud-bucket-1/filename.extension -
																		aws s3 cp s3://ec2-cloud-bucket-1/testfile.txt -

to display all the files in a folder					- 	aws s3 ls s3://your-bucket-name/folder-name/
																		aws s3 ls s3://ec2-cloud-bucket-1/Full_Backup_20250824_105901/
																		aws s3 ls s3://ec2-cloud-bucket-1/BACKUP_LOG_UPLOAD_20250825_141001/pg_backups/Full_Backup_20250825_141001/

to delete all the files in the bucket				- aws s3 rm s3://ec2-cloud-bucket-1 --recursive

to delete a single file 									- aws s3 rm s3://your-bucket-name/path/to/file.ext

to delete a single folder
		to know what actually be deleted		- aws s3 rm s3://your-bucket-name/folder-name/ --recursive --dryrun		[first know what will be deleted]

		to deleet the folder								- aws s3 rm s3://your-bucket-name/folder-name/ --recursive

to see the content in the files						- cat file.txt

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
To check the main config file and infer paths		- ps aux | grep postgres
Find Package Installation Path (if installed via package manager)		- rpm -ql postgresql17
